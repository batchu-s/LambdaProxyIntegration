AWSTemplateFormatVersion: 2010-09-09
Description: 'LambdaProxyIntegration'
# Metadata: 

# Parameters: 

# Mappings: 

# Conditions: 

Resources:
  BackendLambda:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: lambda-proxy-integration
        S3Key: handler_lambda.zip
      Description: Backend Lambda Function
      Runtime: python3.8
      Role: !Sub 'arn:aws:iam::${AWS::AccountId}:role/SVC_LAMBDA_ROLE'
      FunctionName: BackendLambda
      Handler: handler_lambda.lambda_handler
      MemorySize: 128
      Timeout: 120
      Tags:
        - Key: Purpose
          Value: LambdaProxyIntegration

  MyApi:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: APP-API
      Description: This is the Api created to demonstrate Lambda Proxy 'LambdaProxyIntegration
      BinaryMediaTypes:
        - '*/*'
      EndpointConfiguration:
        Types:
          - EDGE
      FailOnWarnings: True

  ProxyResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId: !Ref MyApi
      ParentId: !GetAtt MyApi.RootResourceId
      PathPart: '{proxy+}'
      
  ProxyMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId: !Ref MyApi
      ResourceId: !Ref ProxyResource
      HttpMethod: ANY
      AuthorizationType: NONE
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: ANY
        Uri: !Sub
          - arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaArn}/invocations
          - { LambdaArn: !GetAtt BackendLambda.Arn }

  BackendLambdaPermission:
    Type: AWS::Lambda::Permission
    DependsOn: BackendLambda
    Properties:
      Action: 'lambda:InvokeFunction'
      FunctionName: !GetAtt BackendLambda.Arn
      Principal: apigateway.amazonaws.com

Outputs:
  BackendLambdaName:
    Value: !Ref BackendLambda
  MyApiName:
    Value: !Ref MyApi